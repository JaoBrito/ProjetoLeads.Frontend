@page "/"
@using MudBlazor
@using ProjetoLeads.Frontend.Models
@using ProjetoLeads.Frontend.Services
@inject ApiService ApiService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div style="display:flex;justify-content:space-around;align-content:center">
    <MudText Typo="Typo.h3" GutterBottom="true">Cadastro Leads (Lista)</MudText>
    <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" Style="height:50px" OnClick='() => Navigation.NavigateTo("/create-lead")'>Novo Lead</MudButton>
</div>

@if ( dados == null )
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudTable Items="dados" Hover="true" Striped="true">
        <HeaderContent>
            <MudTh Style="background-color:antiquewhite">CNPJ</MudTh>
            <MudTh Style="background-color:antiquewhite">Razão Social</MudTh>
            <MudTh Style="background-color:antiquewhite">CEP</MudTh>
            <MudTh Style="background-color:antiquewhite">Estado</MudTh>
            <MudTh Style="background-color:antiquewhite">Ações</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Cnpj</MudTd>
            <MudTd>@context.RazaoSocial</MudTd>
            <MudTd>@context.Cep</MudTd>
            <MudTd>@context.Estado</MudTd>
            <MudTd>
                <MudButton Icon="MudIcons.Delete" Variant="Variant.Filled" Color="Color.Warning" OnClick='() => Navigation.NavigateTo($"/edit-lead/{context.Id}")'>Alterar</MudButton>
                <MudButton Icon="MudIcons.Delete" Variant="Variant.Filled" Color="Color.Info" OnClick='() => Navigation.NavigateTo($"/view-lead/{context.Id}")'>Consultar</MudButton>
                <MudButton Icon="MudIcons.Delete" Variant="Variant.Filled" Color="Color.Error" OnClick="() => DeleteLead(context.Id)">Excluir</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private List<LeadModel> dados;

    protected override async Task OnInitializedAsync( )
    {
        dados = await ApiService.GetLeadAsync();
    }


    private async Task DeleteLead( int id )
    {
        bool confirmDelete = await JS.InvokeAsync<bool>( "confirm", "Tem certeza que deseja excluir este Lead?" );

        if ( !confirmDelete )
        {
            await JS.InvokeVoidAsync( "alert", "Lead não deletado!" );
            return;
        }

        var success = await ApiService.DeleteLeadAsync( id );

        if ( success )
        {
            dados.RemoveAll( l => l.Id == id );
            StateHasChanged();
        }
    }
}
